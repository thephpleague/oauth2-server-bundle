name: "unit tests"

on:
    pull_request: ~
    push: ~
    schedule:
        # Do not make it the first of the month and/or midnight since it is a very busy time
        - cron: "10 10 5 * *"

jobs:
    tests:
        runs-on: ubuntu-latest
        continue-on-error: ${{ matrix.can-fail }}
        strategy:
            fail-fast: false
            matrix:
                php: ['8.1', '8.2', '8.3', '8.4']
                symfony: ['6.4.*', '7.1.*', '7.2.*']
                doctrine-orm: ['^2.14', '^3.0']
                composer-flags: ['--prefer-stable']
                can-fail: [false]
                include:
                    - php: "8.1"
                      symfony: "6.4.*"
                      doctrine-orm: "^2.14"
                      composer-flags: '--prefer-stable --prefer-lowest'
                      can-fail: false
                exclude:
                    - php: "8.1"
                      symfony: "7.1.*"
                    - php: "8.1"
                      symfony: "7.2.*"

        name: "PHP ${{ matrix.php }} - Doctrine ${{ matrix.doctrine-orm }} - Symfony ${{ matrix.symfony }}${{ matrix.composer-flags != '' && format(' - Composer {0}', matrix.composer-flags) || '' }}"

        env:
            SYMFONY_REQUIRE: ${{ matrix.symfony }}

        steps:
            - name: "checkout"
              uses: "actions/checkout@v4"

            - name: "build the PHP environment"
              run: "dev/bin/docker-compose build --build-arg PHP_VERSION=${{ matrix.php }} --build-arg XDEBUG_VERSION='3.4.0' php"

            - name: "require specific Doctrine ORM version"
              run: "dev/bin/php composer require --ansi ${{ matrix.composer-flags }} --no-install doctrine/orm:${{ matrix.doctrine-orm }}"

            - name: "install dependencies"
              run: "dev/bin/php composer update --ansi ${{ matrix.composer-flags }}"

            - name: "run unit tests"
              run: "dev/bin/php-test vendor/bin/simple-phpunit --colors=always"

            - name: clear docker volumes
              if: ${{ always() }}
              run: dev/bin/docker-compose down --volumes


    # This is a "trick", a meta task which does not change, and we can use in
    # the protected branch rules as opposed to the individual tests which
    # may change regularly.
    validate-tests:
        name: tests status
        runs-on: ubuntu-latest
        needs: [ tests ]
        if: always()
        steps:
            - name: Successful run
              if: ${{ !(contains(needs.*.result, 'failure')) }}
              run: exit 0

            - name: Failing run
              if: ${{ contains(needs.*.result, 'failure') }}
              run: exit 1
